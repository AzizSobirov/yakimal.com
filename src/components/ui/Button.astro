---
interface Props {
  class?: string;
  id?: string;
  variant?: "primary" | "secondary" | "outline" | "link";
  href?: string;
}

const {
  class: className = "",
  id,
  variant = "primary",
  href,
  ...rest
} = Astro.props;

const variantClasses = {
  primary: "btn-primary",
  secondary: "btn-secondary",
  outline: "btn-outline",
  link: "btn-link",
};

const computedClass = ["btn", className, variantClasses[variant]]
  .filter(Boolean)
  .join(" ");

const Tag = href ? "a" : "button";
---

<Tag id={id} class={computedClass} href={href} {...rest}>
  <slot />
</Tag>

<style lang="scss" is:global>
  @use "scss/helpers" as *;

  .btn {
    color: initial;
    font-size: rem(18);
    font-weight: 500;
    white-space: nowrap;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: var(--transition-ease);

    &-primary {
      width: rem(195);
      height: rem(45);
      color: #fff;
      font-size: rem(18);
      font-weight: 300;
      background: var(--primary);
      border-radius: 9999px;
      gap: rem(10);

      &:hover {
        background: var(--secondary);
      }

      @include media("sm") {
        height: rem(42);
        font-size: rem(16);
      }
    }

    &-secondary {
      height: rem(60);
      width: rem(264);
      color: #fff;
      background: var(--primary);
      border-radius: 9999px;
      gap: rem(14);

      svg {
        transition: var(--transition-ease);
      }

      &:hover {
        color: #fff;
        background: var(--secondary);

        svg {
          transform: translateX(rem(5));
        }
      }

      @include media("sm") {
        width: rem(240);
        height: rem(56);
        font-size: rem(16);
        gap: rem(20);
      }
    }

    &-outline {
      height: rem(56);
      width: rem(220);
      color: var(--primary);
      border: rem(1) solid var(--primary);
      border-radius: 9999px;

      &:hover {
        color: #fff;
        background: var(--primary);
      }
    }
  }
</style>
