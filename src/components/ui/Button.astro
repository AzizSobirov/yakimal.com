---
interface Props {
  class?: string;
  id?: string;
  variant?: "primary" | "secondary" | "outline" | "link";
  href?: string;
  ru?: string;
  jp?: string;
}

const {
  class: className = "",
  id,
  variant = "primary",
  href,
  ru,
  jp,
  ...rest
} = Astro.props;

const variantClasses = {
  primary: "btn-primary",
  secondary: "btn-secondary",
  outline: "btn-outline",
  link: "btn-link",
};

const computedClass = ["btn", className, variantClasses[variant]]
  .filter(Boolean)
  .join(" ");

const Tag = href ? "a" : "button";
---

<Tag id={id} class={computedClass} href={href} {...rest}>
  {
    variant == "primary" ? (
      <>
        <span class="font-montserrat">{jp}</span>
        <hr />
        <span>{ru}</span>
      </>
    ) : (
      <span>{ru || jp}</span>
    )
  }
</Tag>

<style lang="scss" is:global>
  @use "scss/helpers" as *;

  .btn {
    color: initial;
    font-weight: 500;
    white-space: nowrap;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: var(--transition-ease);

    &-primary {
      position: relative;
      padding: 0 rem(15);
      width: rem(265);
      height: rem(60);
      border: rem(3) solid var(--primary);
      justify-content: space-between;
      gap: rem(5);
      overflow: hidden;

      @include media("lg") {
        border-width: rem(2);
      }

      &::before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: calc(100% - rem(14));
        height: calc(100% - rem(14));
        border: rem(1) solid var(--primary);
        pointer-events: none;
      }

      hr {
        width: rem(1);
        height: rem(28);
        background: var(--text-color);
        transition: var(--transition-ease);
      }

      span {
        font-size: rem(22);
        text-transform: uppercase;
        transition: var(--transition-ease);

        @include media("xl") {
          font-size: rem(20);
        }
        @include media("lg") {
          font-size: rem(18);
        }

        &.font-montserrat {
          color: var(--primary);
        }
      }

      &:hover {
        background: var(--primary);

        hr {
          opacity: 0;
          transform: scaleX(0);
          transition:
            opacity 0.3s ease,
            transform 0.3s ease;
        }

        span:first-child {
          opacity: 0;
          transform: translateY(-100%);
          transition:
            opacity 0.3s ease,
            transform 0.3s ease;
        }

        span:last-child {
          position: absolute;
          left: 0;
          right: 0;
          margin: 0 auto;
          color: #fff;
          text-align: center;
          transform: translateY(0);
          transition: transform 0.3s ease;
        }
      }
    }

    &-secondary {
      position: relative;
      gap: rem(14);

      span {
        position: relative;
        font-size: rem(20);
        font-family: var(--font-museo);

        @include media("xl") {
          font-size: rem(16);
        }

        &::after {
          content: "";
          position: absolute;
          bottom: 0;
          left: 0;
          z-index: -1;
          width: 100%;
          height: 22%;
          background: var(--primary-light);
          transition: var(--transition-ease);
        }
      }

      &::after {
        content: "";
        height: rem(6);
        width: rem(80);
        display: block;
        background: url('data:image/svg+xml,<svg width="79" height="8" viewBox="0 0 79 8" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M78.8536 4.35355C79.0488 4.15829 79.0488 3.84171 78.8536 3.64645L75.6716 0.464466C75.4763 0.269204 75.1597 0.269204 74.9645 0.464466C74.7692 0.659728 74.7692 0.976311 74.9645 1.17157L77.7929 4L74.9645 6.82843C74.7692 7.02369 74.7692 7.34027 74.9645 7.53553C75.1597 7.7308 75.4763 7.7308 75.6716 7.53553L78.8536 4.35355ZM0 4.5H78.5V3.5H0V4.5Z" fill="black" /></svg>')
          center/cover no-repeat;
        transition: var(--transition-ease);

        @include media("xl") {
          width: rem(50);
          height: rem(5);
        }
      }

      &:hover {
        span::after {
          height: rem(2);
        }

        &::after {
          transform: translateX(rem(5));
          background-image: url('data:image/svg+xml,<svg width="79" height="8" viewBox="0 0 79 8" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M78.8536 4.35355C79.0488 4.15829 79.0488 3.84171 78.8536 3.64645L75.6716 0.464466C75.4763 0.269204 75.1597 0.269204 74.9645 0.464466C74.7692 0.659728 74.7692 0.976311 74.9645 1.17157L77.7929 4L74.9645 6.82843C74.7692 7.02369 74.7692 7.34027 74.9645 7.53553C75.1597 7.7308 75.4763 7.7308 75.6716 7.53553L78.8536 4.35355ZM0 4.5H78.5V3.5H0V4.5Z" fill="%23CC4444" /></svg>');
        }
      }
    }

    &-outline {
      height: rem(56);
      width: rem(220);
      color: var(--primary);
      border: rem(1) solid var(--primary);
      border-radius: 9999px;

      &:hover {
        color: #fff;
        background: var(--primary);
      }
    }
  }
</style>
